dist: xenial
sudo: required

language: cpp

git:
  depth: false

branches:
  only:
  - staging
  - trying
  - master

addons:
  snaps:
  - lxd
  - name: snapcraft
    classic: true

env:
  global:
  - SNAPCRAFT_ENABLE_ERROR_REPORTING=0
  - SNAPCRAFT_BUILD_ENVIRONMENT=lxd

install:
- sudo apt remove --assume-yes lxd
- sudo /snap/bin/lxd waitready
- sudo /snap/bin/lxd init --auto
- sudo adduser $USER lxd
- |
  echo -e "#cloud-config\npackages: [ccache]" | sg lxd -c '/snap/bin/lxc profile set default user.user-data -'
- sg lxd -c '/snap/bin/lxc profile set default environment.PATH /usr/lib/ccache:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin'
- sg lxd -c "/snap/bin/lxc profile device add default ccache disk source=${HOME}/.ccache/ path=/root/.ccache"
- ccache --max-size=5G

before_script:
- "[ ! -f tests/travis.patch ] || patch -p1 < tests/travis.patch"
- "[ ! -f tests/travis-${BUILD_TYPE}.patch ] || patch -p1 < tests/travis-${BUILD_TYPE}.patch"
- sg lxd -c 'env PATH=/snap/bin:$PATH SNAPCRAFT_BUILD_ENVIRONMENT=lxd /snap/bin/snapcraft refresh'

after_failure:
- cat /tmp/*/trace.txt

cache: ccache

jobs:
  include:
    - env: BUILD_TYPE=RelWithDebInfo
      script:
      - sg lxd -c 'env PATH=/snap/bin:$PATH SNAPCRAFT_BUILD_ENVIRONMENT=lxd /snap/bin/snapcraft'

    - env: BUILD_TYPE=Debug
      script:
      - sg lxd -c 'env PATH=/snap/bin:$PATH SNAPCRAFT_BUILD_ENVIRONMENT=lxd /snap/bin/snapcraft build multipass'
      - sg lxd -c '/snap/bin/lxc start snapcraft-multipass'
      - sg lxd -c
          '/snap/bin/lxc exec snapcraft-multipass --
             env CTEST_OUTPUT_ON_FAILURE=1
                 LD_LIBRARY_PATH=/root/build_multipass/stage/usr/lib/x86_64-linux-gnu/:/root/build_multipass/stage/lib/
                 /root/build_multipass/parts/multipass/build/bin/multipass_tests'

    - env: BUILD_TYPE=Coverage
      script:
      - sg lxd -c 'env PATH=/snap/bin:$PATH SNAPCRAFT_BUILD_ENVIRONMENT=lxd /snap/bin/snapcraft build multipass'
      - sg lxd -c '/snap/bin/lxc start snapcraft-multipass'
      - sg lxd -c
          '/snap/bin/lxc exec snapcraft-multipass --
             env CTEST_OUTPUT_ON_FAILURE=1
                 LD_LIBRARY_PATH=/root/build_multipass/stage/usr/lib/x86_64-linux-gnu/:/root/build_multipass/stage/lib/
                 cmake --build /root/build_multipass/parts/multipass/build --target covreport'
      after_success:
      - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
    - if: (type = pull_request AND head_repo = CanonicalLtd/multipass)
          OR (type != pull_request AND repo = CanonicalLtd/multipass)
      env: BUILD_TYPE=macOS
      git:
        submodules: false
      sudo: false
      before_install:
      - openssl aes-256-cbc -K $encrypted_8d49841daf21_key -iv $encrypted_8d49841daf21_iv
        -in tools/bot-data.tar.xz.enc -out tools/bot-data.tar.xz -d
      - tar --extract --xz --file tools/bot-data.tar.xz --directory ${HOME}
      install: ~
      before_script: ~
      script:
      - |
        if [ "${TRAVIS_EVENT_TYPE}" == "pull_request" ]; then
          REF="+refs/pull/${TRAVIS_PULL_REQUEST}/merge"
        else
          REF="${TRAVIS_COMMIT}"
        fi
        ssh -q -p ${MAC_PORT} ${MAC_USERHOST} multipass-build/build-in-snapshot.sh "${REF}"
      after_failure: ~
      cache: ~
